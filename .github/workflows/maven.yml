# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Upload JAR to S3
      run: |
          ls ./target/*.jar
          aws s3 cp ./target/*.jar s3://${{ secrets.S3_BUCKET_NAME }}/ecom.jar
        

  ssh:
    name: SSH Command
    runs-on: ubuntu-latest
    steps:
      - name: Execute SSH command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }} # Add your EC2 instance's public IP or hostname as a secret
          username: ec2-user # Default AWS EC2 username, change if different
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            whoami
            sudo aws s3 cp "s3://${{ secrets.S3_BUCKET_NAME }}/ecom.jar" /opt/myapp/ecom.jar
            ls /opt/myapp
            pkill -f 'java -jar'
            nohup java -jar /opt/myapp/ecom.jar > app.log 2>&1 &

#          "
#          aws s3 cp "s3://${{ secrets.S3_BUCKET_NAME }}/ecom.jar" /opt/myapp/ecom.jar &&
#          ls /opt/myapp &&
#          nohup java -jar /opt/myapp/ecom.jar > app.log 2>&1 &
#          "

#        env:
#          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#          HOSTNAME: ${{secrets.SSH_HOST}}
#          USER_NAME: ${{secrets.USER_NAME}}
#        run: |
#          echo "$PRIVATE_KEY" >> $HOME/key.pem
#          chmod 400 "$HOME/key.pem"
#          ssh -o StrictHostKeyChecking=no -i "$HOME/key.pem" ${USER_NAME}@${HOSTNAME}
#          '
#          aws s3 cp "s3://${{ secrets.S3_BUCKET_NAME }}/ecom.jar" /opt/myapp/ecom.jar &&
#          ls /opt/myapp &&
#          nohup java -jar /opt/myapp/ecom.jar > app.log 2>&1 &
#          '
