# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Upload JAR to S3
      run: |
          ls ./target/*.jar
          aws s3 cp ./target/*.jar s3://${{ secrets.S3_BUCKET_NAME }}/ecom.jar
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: SSH to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ec2-54-149-231-21.us-west-2.compute.amazonaws.com
          USER_NAME: ec2-user

        run: |
            echo "$USER_NAME@$HOSTNAME"
            echo "$PRIVATE_KEY" >> "$HOME/key.pem"
            echo "$HOME/key.pem"
            chmod 400 "$HOME/key.pem"
            ssh -o StrictHostKeyChecking=no -i "$HOME/key.pem" "$USER_NAME@$HOSTNAME" << EOF 
              # Check if Java is installed using the 'java -version' command
              if [[ ! $(java -version 2>&1) =~ "openjdk 17" ]]; then
                # Java is not installed, so proceed with installation
                sudo yum install -y java-17-amazon-corretto-devel
                echo "Java has been installed successfully."
              else
                # Java is already installed
                echo "Java is already present on the system."
              fi
              # Check if the aws command exists
              if ! command -v aws >/dev/null 2>&1; then
                echo "AWS CLI not found. Downloading and installing..."
                # Download the installer
                if ! curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscli.zip" >/dev/null 2>&1; then
                  echo "Download failed. Please check your internet connection and try again."
                  exit 1
                fi
              
                # Extract the installer
                if ! unzip awscli.zip >/dev/null 2>&1; then
                  echo "Extraction failed. Please check if you have unzip installed."
                  exit 1
                fi
              
                # Install the AWS CLI
                if ! sudo ./aws/install >/dev/null 2>&1; then
                  echo "Installation failed. Please check the logs for more information."
                  exit 1
                fi
                echo "AWS CLI installed successfully."
              else
                echo "AWS CLI already installed."
              fi
              aws --version        
              aws s3 cp "s3://${{ secrets.S3_BUCKET_NAME }}/ecom.jar" ecom.jar
              nohup java -jar ecom.jar > app.log 2>&1 &
            EOF
